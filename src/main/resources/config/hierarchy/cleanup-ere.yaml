name: expert-ere
hierarchyConfigMap:
  root:
    children:
      - moveAgentToBlock_np
      - moveBlockToDoor_np
      - moveBlockToRoom_np
    stateMapper: !!edu.umbc.cs.maple.cleanup.hierarchies.tasks.pick.PickRoomAgentMapper {}
    tf: &tf !!edu.umbc.cs.maple.hierarchy.framework.GoalFailTF
      goalPF: &goalPF !!edu.umbc.cs.maple.cleanup.hierarchies.tasks.root.CleanupRootGoalPF {}
      failPF: !!edu.umbc.cs.maple.cleanup.hierarchies.tasks.root.CleanupRootFailPF {}
    rf: &rf !!edu.umbc.cs.maple.hierarchy.framework.GoalFailRF
      tf: *tf
      rewardDefault: 0.0
      rewardNoop: 0.0
    domainGenerator: !!edu.umbc.cs.maple.hierarchy.framework.TaskDomainGenerator
      tf: *tf
      rf: *rf
      stateClasses:
        - className: agent
          clasz: !!edu.umbc.cs.maple.cleanup.state.CleanupAgent {}
        - className: block
          clasz: !!edu.umbc.cs.maple.cleanup.state.CleanupBlock {}
        - className: room
          clasz: !!edu.umbc.cs.maple.cleanup.state.CleanupRoom {}
        - className: door
          clasz: !!edu.umbc.cs.maple.cleanup.state.CleanupDoor {}
      actions:
        - !!edu.umbc.cs.maple.cleanup.hierarchies.tasks.move.ObjectToObjectActionType
            name: moveAgentToBlock
            parameterClasses:
              - agent
              - block
              - room
              - door
            parameterOrderGroup:
              - moveAgentToBlock.P0
              - moveAgentToBlock.P1
              - moveAgentToBlock.P2
              - moveAgentToBlock.P3
        - !!edu.umbc.cs.maple.cleanup.hierarchies.tasks.move.ObjectToRegionActionType
          name: moveBlockToRoom
          parameterClasses:
            - block
            - room
          parameterOrderGroup:
            - moveBlockToRoom.P0
            - moveBlockToRoom.P1
        - !!edu.umbc.cs.maple.cleanup.hierarchies.tasks.move.ObjectToRegionActionType
          name: moveBlockToDoor
          parameterClasses:
            - block
            - door
          parameterOrderGroup:
            - moveBlockToDoor.P0
            - moveBlockToDoor.P1
    solver: !!edu.umbc.cs.maple.config.solver.ValueIterationMultistepConfig
      maxDelta: 0.0001
      maxIterations: 1000

  moveAgentToBlock:
    children:
      - moveAgentToRoom_np
      - moveAgentToDoor_np
    stateMapper: !!edu.umbc.cs.maple.hierarchy.framework.IdentityMap {}
    tf: &tf !!edu.umbc.cs.maple.hierarchy.framework.GoalFailTF
      goalPF: !!edu.umbc.cs.maple.cleanup.hierarchies.tasks.move.ObjectNextToObjectGoalPF {}
      failPF: !!edu.umbc.cs.maple.cleanup.hierarchies.tasks.move.ObjectNextToObjectFailPF {}
    rf: !!edu.umbc.cs.maple.hierarchy.framework.GoalFailRF
      tf: *tf
      rewardDefault: 0.0
      rewardNoop: 0.0
    domainGenerator: !!edu.umbc.cs.maple.hierarchy.framework.TaskDomainGenerator
      tf: *tf
      rf: *rf
      stateClasses:
        - className: agent
          clasz: !!edu.umbc.cs.maple.cleanup.state.CleanupAgent {}
        - className: room
          clasz: !!edu.umbc.cs.maple.cleanup.state.CleanupRoom {}
        - className: door
          clasz: !!edu.umbc.cs.maple.cleanup.state.CleanupDoor {}
      actions:
        - !!edu.umbc.cs.maple.cleanup.hierarchies.tasks.move.ObjectToRegionActionType
            name: moveAgentToRoom
            parameterClasses:
              - agent
              - room
            parameterOrderGroup:
              - moveAgentToRoom.P0
              - moveAgentToRoom.P1
        - !!edu.umbc.cs.maple.cleanup.hierarchies.tasks.move.ObjectToRegionActionType
          name: moveAgentToDoor
          parameterClasses:
            - agent
            - door
          parameterOrderGroup:
            - moveAgentToDoor.P0
            - moveAgentToDoor.P1
    solver: !!edu.umbc.cs.maple.config.solver.ValueIterationMultistepConfig
      maxDelta: 0.0001
      maxIterations: 1000

  moveBlockToDoor:
    children:
      - north_p
      - south_p
      - east_p
      - west_p
      - pull_p
    domainGenerator: !!edu.umbc.cs.maple.cleanup.hierarchies.tasks.move.CleanupMove {}
    stateMapper: !!edu.umbc.cs.maple.cleanup.hierarchies.tasks.move.BlockDoorMapper {}
    tf: &tf !!edu.umbc.cs.maple.hierarchy.framework.GoalFailTF
      goalPF: !!edu.umbc.cs.maple.cleanup.hierarchies.tasks.move.ObjectInRegionGoalPF {}
      failPF: !!edu.umbc.cs.maple.cleanup.hierarchies.tasks.move.ObjectInRegionFailPF {}
    rf: !!edu.umbc.cs.maple.hierarchy.framework.GoalFailRF
      tf: *tf
      rewardDefault: 0.0
      rewardNoop: 0.0
    solver: !!edu.umbc.cs.maple.config.solver.ValueIterationMultistepConfig
      maxDelta: 0.0001
      maxIterations: 1000

  moveBlockToRoom:
    children:
      - north_p
      - south_p
      - east_p
      - west_p
      - pull_p
    domainGenerator: !!edu.umbc.cs.maple.cleanup.hierarchies.tasks.move.CleanupMove {}
    stateMapper: !!edu.umbc.cs.maple.cleanup.hierarchies.tasks.move.BlockRoomMapper {}
    tf: &tf !!edu.umbc.cs.maple.hierarchy.framework.GoalFailTF
      goalPF: !!edu.umbc.cs.maple.cleanup.hierarchies.tasks.move.ObjectInRegionGoalPF {}
      failPF: !!edu.umbc.cs.maple.cleanup.hierarchies.tasks.move.ObjectInRegionFailPF {}
    rf: !!edu.umbc.cs.maple.hierarchy.framework.GoalFailRF
      tf: *tf
      rewardDefault: 0.0
      rewardNoop: 0.0
    solver: !!edu.umbc.cs.maple.config.solver.ValueIterationMultistepConfig
      maxDelta: 0.0001
      maxIterations: 1000

  moveBlockToDoor:
    children:
      - north_p
      - south_p
      - east_p
      - west_p
      - pull_p
    domainGenerator: !!edu.umbc.cs.maple.cleanup.hierarchies.tasks.move.CleanupMove {}
    stateMapper: !!edu.umbc.cs.maple.cleanup.hierarchies.tasks.move.BlockDoorMapper {}
    tf: &tf !!edu.umbc.cs.maple.hierarchy.framework.GoalFailTF
      goalPF: !!edu.umbc.cs.maple.cleanup.hierarchies.tasks.move.ObjectInRegionGoalPF {}
      failPF: !!edu.umbc.cs.maple.cleanup.hierarchies.tasks.move.ObjectInRegionFailPF {}
    rf: !!edu.umbc.cs.maple.hierarchy.framework.GoalFailRF
      tf: *tf
      rewardDefault: 0.0
      rewardNoop: 0.0
    solver: !!edu.umbc.cs.maple.config.solver.ValueIterationMultistepConfig
      maxDelta: 0.0001
      maxIterations: 1000

  moveAgentToRoom:
    children:
      - north_p
      - south_p
      - east_p
      - west_p
      - pull_p
    domainGenerator: !!edu.umbc.cs.maple.cleanup.hierarchies.tasks.move.CleanupMove {}
    stateMapper: !!edu.umbc.cs.maple.cleanup.hierarchies.tasks.move.AgentRoomMapper {}
    tf: &tf !!edu.umbc.cs.maple.hierarchy.framework.GoalFailTF
      goalPF: !!edu.umbc.cs.maple.cleanup.hierarchies.tasks.move.ObjectInRegionGoalPF {}
      failPF: !!edu.umbc.cs.maple.cleanup.hierarchies.tasks.move.ObjectInRegionFailPF {}
    rf: !!edu.umbc.cs.maple.hierarchy.framework.GoalFailRF
      tf: *tf
      rewardDefault: 0.0
      rewardNoop: 0.0
    solver: !!edu.umbc.cs.maple.config.solver.ValueIterationMultistepConfig
      maxDelta: 0.0001
      maxIterations: 1000

  moveAgentToDoor:
    children:
      - north_p
      - south_p
      - east_p
      - west_p
      - pull_p
    domainGenerator: !!edu.umbc.cs.maple.cleanup.hierarchies.tasks.move.CleanupMove {}
    stateMapper: !!edu.umbc.cs.maple.cleanup.hierarchies.tasks.move.AgentDoorMapper {}
    tf: &tf !!edu.umbc.cs.maple.hierarchy.framework.GoalFailTF
      goalPF: !!edu.umbc.cs.maple.cleanup.hierarchies.tasks.move.ObjectInRegionGoalPF {}
      failPF: !!edu.umbc.cs.maple.cleanup.hierarchies.tasks.move.ObjectInRegionFailPF {}
    rf: !!edu.umbc.cs.maple.hierarchy.framework.GoalFailRF
      tf: *tf
      rewardDefault: 0.0
      rewardNoop: 0.0
    solver: !!edu.umbc.cs.maple.config.solver.ValueIterationMultistepConfig
      maxDelta: 0.0001
      maxIterations: 1000
